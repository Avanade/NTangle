/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using Newtonsoft.Json;
using NTangle;
using NTangle.Cdc;
using System;
using System.Collections.Generic;

namespace SqlServerDemo.Publisher.Entities
{
    /// <summary>
    /// Represents the CDC model for the root (parent) database table '[Legacy].[Customer]'.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class CustomerCdc : IEntity, ILogicallyDeleted
    {
        /// <summary>
        /// Gets or sets the Id '[Legacy].[Customer].[CustId]' column value.
        /// </summary>
        [JsonProperty("id", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the Name '[Legacy].[Customer].[Name]' column value.
        /// </summary>
        [JsonProperty("name", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? Name { get; set; }

        /// <summary>
        /// Gets or sets the Email '[Legacy].[Customer].[Email]' column value.
        /// </summary>
        [JsonProperty("email", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? Email { get; set; }

        /// <summary>
        /// Gets or sets the Is Deleted '[Legacy].[Customer].[is-deleted]' column value.
        /// </summary>
        [JsonProperty("isDeleted", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// Gets or sets the Row Version '[Legacy].[Customer].[RowVersion]' column value.
        /// </summary>
        [JsonProperty("rowVersion", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public byte[]? RowVersion { get; set; }

        /// <inheritdoc/>
        [JsonProperty("etag", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? ETag { get; set; }

        /// <inheritdoc/>
        public void ClearWhereDeleted()
        {
            if (!IsDeleted.HasValue || !IsDeleted.Value)
                return;

            Name = default!;
            Email = default!;
            IsDeleted = default!;
            RowVersion = default!;
        }

        /// <inheritdoc/>
        public CompositeKey PrimaryKey => new CompositeKey(Id);
    }
}

#pragma warning restore
#nullable restore